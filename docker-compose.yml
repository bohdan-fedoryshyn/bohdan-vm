version:  "3.8"
services:
  mysql:
    container_name: mysql
    image: mysql:5.7.32
    user: root
    environment:
      MYSQL_ROOT_PASSWORD: "root"
      MYSQL_DATABASE: "grafana"
      MYSQL_USER: "grafana"
      MYSQL_PASSWORD: "grafana"
    volumes:
      - ./mysql:/var/lib/mysql
    ports:
      - 0.0.0.0:3306:3306
    restart: always
    networks:
      - backend

  analytics:
    #image: 'analytics:latest'
    build:
      context: ./analytics
      dockerfile: Dockerfile
    restart: on-failure
    container_name: analytics
    ports:
      - '8090:8080'

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    volumes:
      - ./prometheus/conf:/etc/prometheus
      - ./prometheus/data:/prometheus
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --storage.tsdb.path=/prometheus
      - --storage.tsdb.retention=200h
      - --web.enable-admin-api
      - --web.enable-lifecycle

    restart: always
    ports:
      - 9090:9090

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: always
    ports:
      - 3000:3000

  alertmanager:
    image: prom/alertmanager:latest
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    #restart: always
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      #- '--store.path=/etc/alertmanager'

      #      node-exporter:
      #       image: prom/node-exporter:latest
      #      container_name: node
      #     restart: always
      #    volumes:
      #     - /proc:/host/proc:ro
      #    - /sys:/host/sys:ro
      #   - /:/rootfs:ro
      #command:
      # - '--path.procfs=/host/proc'
      #- '--path.rootfs=/rootfs'
      #- '--path.sysfs=/host/sys'
      #- '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
    # ports:
    #  - 9100:9100

networks:
  backend:
    driver: bridge

  analytics:
    driver: bridge